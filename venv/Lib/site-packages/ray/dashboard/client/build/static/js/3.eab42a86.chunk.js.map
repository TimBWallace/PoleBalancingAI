{"version":3,"sources":["components/SearchComponent.tsx","util/converter.ts","util/func.tsx","components/ActorTable.tsx","components/PercentageBar.tsx","components/StatesCounter.tsx","components/Loading.tsx","../node_modules/@material-ui/icons/esm/KeyboardArrowDown.js","../node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","components/WorkerTable.tsx","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","service/job.ts","pages/job/JobDetail.tsx","pages/job/hook/useJobDetail.ts"],"names":["useStyles","makeStyles","theme","search","margin","spacing","marginTop","SearchInput","label","onChange","defaultValue","classes","className","size","InputProps","value","target","endAdornment","position","SearchSelect","options","select","SelectProps","style","width","map","e","memoryConverter","bytes","toFixed","longTextCut","text","len","title","interactive","length","slice","ActorTable","actors","workers","useState","pageNo","setPageNo","useFilter","changeFilter","filterFunc","pageSize","setPageSize","ipLogMap","useContext","GlobalContext","actorList","Object","values","functionDesc","taskSpec","functionDescriptor","javaFunctionDescriptor","pythonFunctionDescriptor","join","filter","list","Fragment","flex","display","alignItems","Array","from","Set","state","onInputChange","_","trim","renderInput","params","address","ipAddress","Math","min","Number","page","num","count","ceil","type","col","align","actorId","jobId","pid","name","numRestarts","coreWorkerStats","expandComponent","actorMap","mini","color","orange","port","status","to","encodeURIComponent","useStyle","container","background","border","padding","height","lineHeight","boxSizing","borderRadius","displayBar","palette","paper","right","transition","borderTopLeftRadius","borderBottomLeftRadius","fontSize","zIndex","primary","textAlign","PercentageBar","props","total","per","round","max","children","StateCounter","stateMap","forEach","item","suffix","entries","s","Loading","loading","open","createSvgIcon","React","d","ExpandableTableRow","stateKey","otherProps","isExpanded","setIsExpanded","useEffect","startsWith","TableRow","TableCell","IconButton","onClick","KeyboardArrowDown","KeyboardArrowRight","colSpan","WorkerDetailTable","TableContainer","RayletWorkerTable","key","setKey","nodeMap","Button","random","Table","TableHead","TableBody","sort","aWorker","bWorker","a","cpuPercent","cpuTimes","memoryInfo","cmdline","createTime","language","ip","hostname","maxHeight","overflow","val","lineBreak","dayjs","format","Grid","window","ref","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","overflowX","Switch","_props$color","_props$edge","edge","_props$size","icon","thumb","edgeStart","edgeEnd","concat","capitalize","SwitchBase","checkedIcon","switchBase","input","checked","disabled","track","flexShrink","verticalAlign","colorAdjust","marginLeft","marginRight","top","left","grey","transitions","create","duration","shortest","transform","opacity","colorPrimary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","getJobList","get","getJobDetail","id","marginBottom","fontWeight","pageMeta","tab","dependenciesChip","wordBreak","alert","error","JobDetailPage","match","job","setJob","msg","setMsg","refreshing","setRefresh","selectedTab","setTab","tot","useRef","getJob","useCallback","rsp","data","detail","result","undefined","current","setTimeout","clearTimeout","jobInfo","jobActors","handleChange","event","newValue","handleSwitchChange","useJobDetail","TitleCard","StatusChip","isDead","inputProps","Tabs","Tab","jobWorkers","xs","driverIpAddress","driverPid","startTime","endTime","eventUrl","href","rel","failErrorMessage","dependencies","python","justifyItems","flexWrap","java","version","url"],"mappings":"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","file":"static/js/3.eab42a86.chunk.js","sourcesContent":["import {\n  InputAdornment,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    margin: theme.spacing(1),\n    marginTop: 0,\n  },\n}));\n\nexport const SearchInput = ({\n  label,\n  onChange,\n  defaultValue,\n}: {\n  label: string;\n  defaultValue?: string;\n  onChange?: (value: string) => void;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      InputProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value);\n          }\n        },\n        defaultValue,\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <SearchOutlined />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport const SearchSelect = ({\n  label,\n  onChange,\n  options,\n}: {\n  label: string;\n  onChange?: (value: string) => void;\n  options: (string | [string, string])[];\n}) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      select\n      SelectProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value as string);\n          }\n        },\n        style: {\n          width: 100,\n        },\n      }}\n    >\n      <MenuItem value=\"\">All</MenuItem>\n      {options.map((e) =>\n        typeof e === \"string\" ? (\n          <MenuItem value={e}>{e}</MenuItem>\n        ) : (\n          <MenuItem value={e[0]}>{e[1]}</MenuItem>\n        ),\n      )}\n    </TextField>\n  );\n};\n","export const memoryConverter = (bytes: number) => {\n  if (bytes < 1024) {\n    return `${bytes}KB`;\n  }\n\n  if (bytes < 1024 ** 2) {\n    return `${(bytes / 1024 ** 1).toFixed(2)}KB`;\n  }\n\n  if (bytes < 1024 ** 3) {\n    return `${(bytes / 1024 ** 2).toFixed(2)}MB`;\n  }\n\n  if (bytes < 1024 ** 4) {\n    return `${(bytes / 1024 ** 3).toFixed(2)}GB`;\n  }\n\n  if (bytes < 1024 ** 5) {\n    return `${(bytes / 1024 ** 4).toFixed(2)}TB`;\n  }\n\n  if (bytes < 1024 ** 6) {\n    return `${(bytes / 1024 ** 5).toFixed(2)}TB`;\n  }\n\n  return \"\";\n};\n","import { Tooltip } from \"@material-ui/core\";\nimport React, { CSSProperties } from \"react\";\n\nexport const longTextCut = (text: string = \"\", len: number = 28) => (\n  <Tooltip title={text} interactive>\n    <span>{text.length > len ? text.slice(0, len) + \"...\" : text}</span>\n  </Tooltip>\n);\n\nexport const jsonFormat = (str: string | object) => {\n  const preStyle = {\n    textAlign: \"left\",\n    wordBreak: \"break-all\",\n    whiteSpace: \"pre-wrap\",\n  } as CSSProperties;\n  if (typeof str === \"object\") {\n    return <pre style={preStyle}>{JSON.stringify(str, null, 2)}</pre>;\n  }\n  try {\n    const j = JSON.parse(str);\n    if (typeof j !== \"object\") {\n      return JSON.stringify(j);\n    }\n    return <pre style={preStyle}>{JSON.stringify(j, null, 2)}</pre>;\n  } catch (e) {\n    return str;\n  }\n};\n","import {\n  InputAdornment,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  TextFieldProps,\n} from \"@material-ui/core\";\nimport { orange } from \"@material-ui/core/colors\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../App\";\nimport { Actor } from \"../type/actor\";\nimport { Worker } from \"../type/worker\";\nimport { longTextCut } from \"../util/func\";\nimport { useFilter } from \"../util/hook\";\nimport StateCounter from \"./StatesCounter\";\nimport { StatusChip } from \"./StatusChip\";\nimport RayletWorkerTable, { ExpandableTableRow } from \"./WorkerTable\";\n\nconst ActorTable = ({\n  actors = {},\n  workers = [],\n}: {\n  actors: { [actorId: string]: Actor };\n  workers?: Worker[];\n}) => {\n  const [pageNo, setPageNo] = useState(1);\n  const { changeFilter, filterFunc } = useFilter();\n  const [pageSize, setPageSize] = useState(10);\n  const { ipLogMap } = useContext(GlobalContext);\n  const actorList = Object.values(actors || {})\n    .map((e) => ({\n      ...e,\n      functionDesc: Object.values(\n        e.taskSpec?.functionDescriptor?.javaFunctionDescriptor ||\n          e.taskSpec?.functionDescriptor?.pythonFunctionDescriptor ||\n          {},\n      ).join(\" \"),\n    }))\n    .filter(filterFunc);\n  const list = actorList.slice((pageNo - 1) * pageSize, pageNo * pageSize);\n\n  return (\n    <React.Fragment>\n      <div style={{ flex: 1, display: \"flex\", alignItems: \"center\" }}>\n        <Autocomplete\n          style={{ margin: 8, width: 120 }}\n          options={Array.from(\n            new Set(Object.values(actors).map((e) => e.state)),\n          )}\n          onInputChange={(_: any, value: string) => {\n            changeFilter(\"state\", value.trim());\n          }}\n          renderInput={(params: TextFieldProps) => (\n            <TextField {...params} label=\"State\" />\n          )}\n        />\n        <Autocomplete\n          style={{ margin: 8, width: 150 }}\n          options={Array.from(\n            new Set(Object.values(actors).map((e) => e.address?.ipAddress)),\n          )}\n          onInputChange={(_: any, value: string) => {\n            changeFilter(\"address.ipAddress\", value.trim());\n          }}\n          renderInput={(params: TextFieldProps) => (\n            <TextField {...params} label=\"IP\" />\n          )}\n        />\n        <TextField\n          style={{ margin: 8, width: 120 }}\n          label=\"PID\"\n          size=\"small\"\n          InputProps={{\n            onChange: ({ target: { value } }) => {\n              changeFilter(\"pid\", value.trim());\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchOutlined />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          style={{ margin: 8, width: 200 }}\n          label=\"Task Func Desc\"\n          size=\"small\"\n          InputProps={{\n            onChange: ({ target: { value } }) => {\n              changeFilter(\"functionDesc\", value.trim());\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchOutlined />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          style={{ margin: 8, width: 120 }}\n          label=\"Name\"\n          size=\"small\"\n          InputProps={{\n            onChange: ({ target: { value } }) => {\n              changeFilter(\"name\", value.trim());\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchOutlined />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          style={{ margin: 8, width: 120 }}\n          label=\"Actor ID\"\n          size=\"small\"\n          InputProps={{\n            onChange: ({ target: { value } }) => {\n              changeFilter(\"actorId\", value.trim());\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchOutlined />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          style={{ margin: 8, width: 120 }}\n          label=\"Page Size\"\n          size=\"small\"\n          InputProps={{\n            onChange: ({ target: { value } }) => {\n              setPageSize(Math.min(Number(value), 500) || 10);\n            },\n          }}\n        />\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <div>\n          <Pagination\n            page={pageNo}\n            onChange={(e, num) => setPageNo(num)}\n            count={Math.ceil(actorList.length / pageSize)}\n          />\n        </div>\n        <div>\n          <StateCounter type=\"actor\" list={actorList} />\n        </div>\n      </div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {[\n              \"\",\n              \"ID(Num Restarts)\",\n              \"Name\",\n              \"Task Func Desc\",\n              \"Job Id\",\n              \"Pid\",\n              \"IP\",\n              \"Port\",\n              \"State\",\n              \"Log\",\n            ].map((col) => (\n              <TableCell align=\"center\" key={col}>\n                {col}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {list.map(\n            ({\n              actorId,\n              functionDesc,\n              jobId,\n              pid,\n              address,\n              state,\n              name,\n              numRestarts,\n            }) => (\n              <ExpandableTableRow\n                length={\n                  workers.filter(\n                    (e) =>\n                      e.pid === pid &&\n                      address.ipAddress === e.coreWorkerStats[0].ipAddress,\n                  ).length\n                }\n                expandComponent={\n                  <RayletWorkerTable\n                    actorMap={{}}\n                    workers={workers.filter(\n                      (e) =>\n                        e.pid === pid &&\n                        address.ipAddress === e.coreWorkerStats[0].ipAddress,\n                    )}\n                    mini\n                  />\n                }\n                key={actorId}\n              >\n                <TableCell\n                  align=\"center\"\n                  style={{\n                    color: Number(numRestarts) > 0 ? orange[500] : \"inherit\",\n                  }}\n                >\n                  {actorId}({numRestarts})\n                </TableCell>\n                <TableCell align=\"center\">{name}</TableCell>\n                <TableCell align=\"center\">\n                  {longTextCut(functionDesc, 60)}\n                </TableCell>\n                <TableCell align=\"center\">{jobId}</TableCell>\n                <TableCell align=\"center\">{pid}</TableCell>\n                <TableCell align=\"center\">{address?.ipAddress}</TableCell>\n                <TableCell align=\"center\">{address?.port}</TableCell>\n                <TableCell align=\"center\">\n                  <StatusChip type=\"actor\" status={state} />\n                </TableCell>\n                <TableCell align=\"center\">\n                  {ipLogMap[address?.ipAddress] && (\n                    <Link\n                      target=\"_blank\"\n                      to={`/log/${encodeURIComponent(\n                        ipLogMap[address?.ipAddress],\n                      )}?fileName=${jobId}-${pid}`}\n                    >\n                      Log\n                    </Link>\n                  )}\n                </TableCell>\n              </ExpandableTableRow>\n            ),\n          )}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default ActorTable;\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { PropsWithChildren } from \"react\";\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    background: \"linear-gradient(45deg, #21CBF3ee 30%, #2196F3ee 90%)\",\n    border: `1px solid #ffffffbb`,\n    padding: \"0 12px\",\n    height: 18,\n    lineHeight: \"18px\",\n    position: \"relative\",\n    boxSizing: \"content-box\",\n    borderRadius: 4,\n  },\n  displayBar: {\n    background: theme.palette.background.paper,\n    position: \"absolute\",\n    right: 0,\n    height: 18,\n    transition: \"0.5s width\",\n    borderRadius: 2,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    border: \"2px solid transparent\",\n    boxSizing: \"border-box\",\n  },\n  text: {\n    fontSize: 12,\n    zIndex: 2,\n    position: \"relative\",\n    color: theme.palette.text.primary,\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n}));\n\nconst PercentageBar = (\n  props: PropsWithChildren<{ num: number; total: number }>,\n) => {\n  const { num, total } = props;\n  const classes = useStyle();\n  const per = Math.round((num / total) * 100);\n\n  return (\n    <div className={classes.container}>\n      <div\n        className={classes.displayBar}\n        style={{\n          width: `${Math.min(Math.max(0, 100 - per), 100)}%`,\n        }}\n      />\n      <div className={classes.text}>{props.children}</div>\n    </div>\n  );\n};\n\nexport default PercentageBar;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { StatusChip } from \"./StatusChip\";\n\nconst StateCounter = ({\n  type,\n  list,\n}: {\n  type: string;\n  list: { state: string }[];\n}) => {\n  const stateMap = {} as { [state: string]: number };\n  list.forEach(({ state }) => {\n    stateMap[state] = stateMap[state] + 1 || 1;\n  });\n\n  return (\n    <Grid container spacing={2} alignItems=\"center\">\n      <Grid item>\n        <StatusChip status=\"TOTAL\" type={type} suffix={`x ${list.length}`} />\n      </Grid>\n      {Object.entries(stateMap).map(([s, num]) => (\n        <Grid item>\n          <StatusChip status={s} type={type} suffix={` x ${num}`} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default StateCounter;\n","import { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Loading = ({ loading }: { loading: boolean }) => (\n  <Backdrop open={loading} style={{ zIndex: 100 }}>\n    <CircularProgress color=\"primary\" />\n  </Backdrop>\n);\n\nexport default Loading;\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');","import {\n  Button,\n  Grid,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { KeyboardArrowDown, KeyboardArrowRight } from \"@material-ui/icons\";\nimport dayjs from \"dayjs\";\nimport React, {\n  PropsWithChildren,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../App\";\nimport { Actor } from \"../type/actor\";\nimport { CoreWorkerStats, Worker } from \"../type/worker\";\nimport { memoryConverter } from \"../util/converter\";\nimport { longTextCut } from \"../util/func\";\n\nimport { useFilter } from \"../util/hook\";\nimport ActorTable from \"./ActorTable\";\nimport PercentageBar from \"./PercentageBar\";\nimport { SearchInput } from \"./SearchComponent\";\n\nexport const ExpandableTableRow = ({\n  children,\n  expandComponent,\n  length,\n  stateKey = \"\",\n  ...otherProps\n}: PropsWithChildren<{\n  expandComponent: ReactNode;\n  length: number;\n  stateKey?: string;\n}>) => {\n  const [isExpanded, setIsExpanded] = React.useState(false);\n\n  useEffect(() => {\n    if (stateKey.startsWith(\"ON\")) {\n      setIsExpanded(true);\n    } else if (stateKey.startsWith(\"OFF\")) {\n      setIsExpanded(false);\n    }\n  }, [stateKey]);\n\n  if (length < 1) {\n    return (\n      <TableRow {...otherProps}>\n        <TableCell padding=\"checkbox\" />\n        {children}\n      </TableRow>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <TableRow {...otherProps}>\n        <TableCell padding=\"checkbox\">\n          <IconButton\n            style={{ color: \"inherit\" }}\n            onClick={() => setIsExpanded(!isExpanded)}\n          >\n            {length}\n            {isExpanded ? <KeyboardArrowDown /> : <KeyboardArrowRight />}\n          </IconButton>\n        </TableCell>\n        {children}\n      </TableRow>\n      {isExpanded && (\n        <TableRow>\n          <TableCell colSpan={24}>{expandComponent}</TableCell>\n        </TableRow>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst WorkerDetailTable = ({\n  actorMap,\n  coreWorkerStats,\n}: {\n  actorMap: { [actorId: string]: Actor };\n  coreWorkerStats: CoreWorkerStats[];\n}) => {\n  const actors = {} as { [actorId: string]: Actor };\n  (coreWorkerStats || [])\n    .filter((e) => actorMap[e.actorId])\n    .forEach((e) => (actors[e.actorId] = actorMap[e.actorId]));\n\n  if (!Object.values(actors).length) {\n    return <p>The Worker Haven't Had Related Actor Yet.</p>;\n  }\n\n  return (\n    <TableContainer>\n      <ActorTable actors={actors} />\n    </TableContainer>\n  );\n};\n\nconst RayletWorkerTable = ({\n  workers = [],\n  actorMap,\n  mini,\n}: {\n  workers: Worker[];\n  actorMap: { [actorId: string]: Actor };\n  mini?: boolean;\n}) => {\n  const { changeFilter, filterFunc } = useFilter();\n  const [key, setKey] = useState(\"\");\n  const { nodeMap, ipLogMap } = useContext(GlobalContext);\n  const open = () => setKey(`ON${Math.random()}`);\n  const close = () => setKey(`OFF${Math.random()}`);\n\n  return (\n    <React.Fragment>\n      {!mini && (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <SearchInput\n            label=\"Pid\"\n            onChange={(value) => changeFilter(\"pid\", value)}\n          />\n          <Button onClick={open}>Expand All</Button>\n          <Button onClick={close}>Collapse All</Button>\n        </div>\n      )}{\" \"}\n      <Table>\n        <TableHead>\n          <TableRow>\n            {[\n              \"\",\n              \"Pid\",\n              \"CPU\",\n              \"CPU Times\",\n              \"Memory\",\n              \"CMD Line\",\n              \"Create Time\",\n              \"Log\",\n              \"Ops\",\n              \"IP/Hostname\",\n            ].map((col) => (\n              <TableCell align=\"center\" key={col}>\n                {col}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {workers\n            .filter(filterFunc)\n            .sort((aWorker, bWorker) => {\n              const a =\n                (aWorker.coreWorkerStats || []).filter(\n                  (e) => actorMap[e.actorId],\n                ).length || 0;\n              const b =\n                (bWorker.coreWorkerStats || []).filter(\n                  (e) => actorMap[e.actorId],\n                ).length || 0;\n              return b - a;\n            })\n            .map(\n              ({\n                pid,\n                cpuPercent,\n                cpuTimes,\n                memoryInfo,\n                cmdline,\n                createTime,\n                coreWorkerStats = [],\n                language,\n                ip,\n                hostname,\n              }) => (\n                <ExpandableTableRow\n                  expandComponent={\n                    <WorkerDetailTable\n                      actorMap={actorMap}\n                      coreWorkerStats={coreWorkerStats}\n                    />\n                  }\n                  length={\n                    (coreWorkerStats || []).filter((e) => actorMap[e.actorId])\n                      .length\n                  }\n                  key={pid}\n                  stateKey={key}\n                >\n                  <TableCell align=\"center\">{pid}</TableCell>\n                  <TableCell align=\"center\">\n                    <PercentageBar num={Number(cpuPercent)} total={100}>\n                      {cpuPercent}%\n                    </PercentageBar>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <div style={{ maxHeight: 55, overflow: \"auto\" }}>\n                      {Object.entries(cpuTimes || {}).map(([key, val]) => (\n                        <div style={{ margin: 4 }}>\n                          {key}:{val}\n                        </div>\n                      ))}\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <div style={{ maxHeight: 55, overflow: \"auto\" }}>\n                      {Object.entries(memoryInfo || {}).map(([key, val]) => (\n                        <div style={{ margin: 4 }}>\n                          {key}:{memoryConverter(val)}\n                        </div>\n                      ))}\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"center\" style={{ lineBreak: \"anywhere\" }}>\n                    {cmdline && longTextCut(cmdline.filter((e) => e).join(\" \"))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {dayjs(createTime * 1000).format(\"YYYY/MM/DD HH:mm:ss\")}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Grid container spacing={2}>\n                      {ipLogMap[ip] && (\n                        <Grid item>\n                          <Link\n                            target=\"_blank\"\n                            to={`/log/${encodeURIComponent(\n                              ipLogMap[ip],\n                            )}?fileName=${\n                              coreWorkerStats[0].jobId || \"\"\n                            }-${pid}`}\n                          >\n                            Log\n                          </Link>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {language === \"JAVA\" && (\n                      <div>\n                        <Button\n                          onClick={() => {\n                            window.open(\n                              `#/cmd/jstack/${coreWorkerStats[0]?.ipAddress}/${pid}`,\n                            );\n                          }}\n                        >\n                          jstack\n                        </Button>{\" \"}\n                        <Button\n                          onClick={() => {\n                            window.open(\n                              `#/cmd/jmap/${coreWorkerStats[0]?.ipAddress}/${pid}`,\n                            );\n                          }}\n                        >\n                          jmap\n                        </Button>\n                        <Button\n                          onClick={() => {\n                            window.open(\n                              `#/cmd/jstat/${coreWorkerStats[0]?.ipAddress}/${pid}`,\n                            );\n                          }}\n                        >\n                          jstat\n                        </Button>\n                      </div>\n                    )}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {ip}\n                    <br />\n                    {nodeMap[hostname] ? (\n                      <Link target=\"_blank\" to={`/node/${nodeMap[hostname]}`}>\n                        {hostname}\n                      </Link>\n                    ) : (\n                      hostname\n                    )}\n                  </TableCell>\n                </ExpandableTableRow>\n              ),\n            )}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default RayletWorkerTable;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import { JobDetailRsp, JobListRsp } from \"../type/job\";\nimport { get } from \"./requestHandlers\";\n\nexport const getJobList = () => {\n  return get<JobListRsp>(\"jobs?view=summary\");\n};\n\nexport const getJobDetail = (id: string) => {\n  return get<JobDetailRsp>(`jobs/${id}`);\n};\n","import {\n  Grid,\n  makeStyles,\n  Switch,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tabs,\n} from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport React from \"react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport ActorTable from \"../../components/ActorTable\";\nimport Loading from \"../../components/Loading\";\nimport { StatusChip } from \"../../components/StatusChip\";\nimport TitleCard from \"../../components/TitleCard\";\nimport RayletWorkerTable from \"../../components/WorkerTable\";\nimport { longTextCut } from \"../../util/func\";\nimport { useJobDetail } from \"./hook/useJobDetail\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  label: {\n    fontWeight: \"bold\",\n  },\n  pageMeta: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  tab: {\n    marginBottom: theme.spacing(2),\n  },\n  dependenciesChip: {\n    margin: theme.spacing(0.5),\n    wordBreak: \"break-all\",\n  },\n  alert: {\n    color: theme.palette.error.main,\n  },\n}));\n\nconst JobDetailPage = (props: RouteComponentProps<{ id: string }>) => {\n  const classes = useStyle();\n  const {\n    actorMap,\n    jobInfo,\n    job,\n    msg,\n    selectedTab,\n    handleChange,\n    handleSwitchChange,\n    params,\n    refreshing,\n    ipLogMap,\n  } = useJobDetail(props);\n\n  if (!job || !jobInfo) {\n    return (\n      <div className={classes.root}>\n        <Loading loading={msg.startsWith(\"Loading\")} />\n        <TitleCard title={`JOB - ${params.id}`}>\n          <StatusChip type=\"job\" status=\"LOADING\" />\n          <br />\n          Auto Refresh:\n          <Switch\n            checked={refreshing}\n            onChange={handleSwitchChange}\n            name=\"refresh\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n          />\n          <br />\n          Request Status: {msg} <br />\n        </TitleCard>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <TitleCard title={`JOB - ${params.id}`}>\n        <StatusChip type=\"job\" status={jobInfo.isDead ? \"DEAD\" : \"ALIVE\"} />\n        <br />\n        Auto Refresh:\n        <Switch\n          checked={refreshing}\n          onChange={handleSwitchChange}\n          name=\"refresh\"\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        />\n        <br />\n        Request Status: {msg} <br />\n      </TitleCard>\n      <TitleCard title=\"Job Detail\">\n        <Tabs\n          value={selectedTab}\n          onChange={handleChange}\n          className={classes.tab}\n        >\n          <Tab value=\"info\" label=\"Info\" />\n          <Tab value=\"dep\" label=\"Dependencies\" />\n          <Tab\n            value=\"worker\"\n            label={`Worker(${job?.jobWorkers?.length || 0})`}\n          />\n          <Tab\n            value=\"actor\"\n            label={`Actor(${Object.entries(job?.jobActors || {}).length || 0})`}\n          />\n        </Tabs>\n        {selectedTab === \"info\" && (\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <span className={classes.label}>Driver IP</span>:{\" \"}\n              {jobInfo.driverIpAddress}\n            </Grid>\n            {ipLogMap[jobInfo.driverIpAddress] && (\n              <Grid item xs={4}>\n                <span className={classes.label}>Driver Log</span>:{\" \"}\n                <Link\n                  to={`/log/${encodeURIComponent(\n                    ipLogMap[jobInfo.driverIpAddress],\n                  )}?fileName=driver-${jobInfo.jobId}`}\n                  target=\"_blank\"\n                >\n                  Log\n                </Link>\n              </Grid>\n            )}\n            <Grid item xs={4}>\n              <span className={classes.label}>Driver Pid</span>:{\" \"}\n              {jobInfo.driverPid}\n            </Grid>\n            <Grid item xs={4}>\n              <span className={classes.label}>StartTime</span>:{\" \"}\n              {dayjs(Number(jobInfo.startTime)).format(\"YYYY/MM/DD HH:mm:ss\")}\n            </Grid>\n            <Grid item xs={4}>\n              <span className={classes.label}>EndTime</span>:{\" \"}\n              {jobInfo.endTime > 0\n                ? dayjs(Number(jobInfo.endTime)).format(\"YYYY/MM/DD HH:mm:ss\")\n                : \"-\"}\n            </Grid>\n            {jobInfo.eventUrl && (\n              <Grid item xs={4}>\n                <span className={classes.label}>Event Link</span>:{\" \"}\n                <a\n                  href={jobInfo.eventUrl}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Event Log\n                </a>\n              </Grid>\n            )}\n            {jobInfo.failErrorMessage && (\n              <Grid item xs={12}>\n                <span className={classes.label}>Fail Error</span>:{\" \"}\n                <span className={classes.alert}>\n                  {jobInfo.failErrorMessage}\n                </span>\n              </Grid>\n            )}\n          </Grid>\n        )}\n        {jobInfo?.dependencies && selectedTab === \"dep\" && (\n          <div className={classes.paper}>\n            {jobInfo?.dependencies?.python && (\n              <TitleCard title=\"Python Dependencies\">\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyItems: \"space-around\",\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  {jobInfo.dependencies.python.map((e) => (\n                    <StatusChip\n                      type=\"deps\"\n                      status={e.startsWith(\"http\") ? longTextCut(e, 30) : e}\n                      key={e}\n                    />\n                  ))}\n                </div>\n              </TitleCard>\n            )}\n            {jobInfo?.dependencies?.java && (\n              <TitleCard title=\"Java Dependencies\">\n                <TableContainer>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        {[\"Name\", \"Version\", \"URL\"].map((col) => (\n                          <TableCell align=\"center\" key={col}>\n                            {col}\n                          </TableCell>\n                        ))}\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {jobInfo.dependencies.java.map(\n                        ({ name, version, url }) => (\n                          <TableRow key={url}>\n                            <TableCell align=\"center\">{name}</TableCell>\n                            <TableCell align=\"center\">{version}</TableCell>\n                            <TableCell align=\"center\">\n                              <a\n                                href={url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                {url}\n                              </a>\n                            </TableCell>\n                          </TableRow>\n                        ),\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </TitleCard>\n            )}\n          </div>\n        )}\n        {selectedTab === \"worker\" && (\n          <div>\n            <TableContainer className={classes.paper}>\n              <RayletWorkerTable\n                workers={job.jobWorkers}\n                actorMap={actorMap || {}}\n              />\n            </TableContainer>\n          </div>\n        )}\n        {selectedTab === \"actor\" && (\n          <div>\n            <TableContainer className={classes.paper}>\n              <ActorTable actors={actorMap || {}} workers={job.jobWorkers} />\n            </TableContainer>\n          </div>\n        )}\n      </TitleCard>\n    </div>\n  );\n};\n\nexport default JobDetailPage;\n","import { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { GlobalContext } from \"../../../App\";\nimport { getJobDetail } from \"../../../service/job\";\nimport { JobDetail } from \"../../../type/job\";\n\nexport const useJobDetail = (props: RouteComponentProps<{ id: string }>) => {\n  const {\n    match: { params },\n  } = props;\n  const [job, setJob] = useState<JobDetail>();\n  const [msg, setMsg] = useState(\"Loading the job detail\");\n  const [refreshing, setRefresh] = useState(true);\n  const [selectedTab, setTab] = useState(\"info\");\n  const { ipLogMap } = useContext(GlobalContext);\n  const tot = useRef<NodeJS.Timeout>();\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n    setTab(newValue);\n  };\n  const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRefresh(event.target.checked);\n  };\n  const getJob = useCallback(async () => {\n    if (!refreshing) {\n      return;\n    }\n    const rsp = await getJobDetail(params.id);\n\n    if (rsp.data?.data?.detail) {\n      setJob(rsp.data.data.detail);\n    }\n\n    if (rsp.data?.msg) {\n      setMsg(rsp.data.msg || \"\");\n    }\n\n    if (rsp.data.result === false) {\n      setMsg(\"Job Query Error Please Check JobId\");\n      setJob(undefined);\n      setRefresh(false);\n    }\n\n    tot.current = setTimeout(getJob, 4000);\n  }, [refreshing, params.id]);\n\n  useEffect(() => {\n    if (tot.current) {\n      clearTimeout(tot.current);\n    }\n    getJob();\n    return () => {\n      if (tot.current) {\n        clearTimeout(tot.current);\n      }\n    };\n  }, [getJob]);\n\n  const { jobInfo } = job || {};\n  const actorMap = job?.jobActors;\n\n  return {\n    actorMap,\n    jobInfo,\n    job,\n    msg,\n    selectedTab,\n    handleChange,\n    handleSwitchChange,\n    params,\n    refreshing,\n    ipLogMap,\n  };\n};\n"],"sourceRoot":""}